services:
  backend:
    build: .
    container_name: paystell-backend
    ports:
      - "4000:4000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DATABASE=paystell
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=4000
      - NODE_ENV=production
      - AUTH0_SECRET=your-auth0-secret
      - AUTH0_BASE_URL=http://localhost:4000
      - AUTH0_ISSUER_BASE_URL=https://dev-wu6ywz3z0p1tpbkp.us.auth0.com
      - AUTH0_CLIENT_ID=dO2W6eUGpJmQx4IWhDtytcdG8nhej9mDg3g9Y4TAL-pyIootyoR8Z_jnB0gjUpiK   
      - AUTH0_CLIENT_SECRET=TPaq6yv0MBcpuP2fFJcSUDsaqnrYbzo2
      - JWT_SECRET=your-jwt-secret
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-email-password
      - STELLAR_NETWORK=testnet
      - STELLAR_HORIZON_URL=https://horizon-testnet.stellar.org
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - MAX_FILE_SIZE=5242880
      - UPLOAD_PATH=./uploads
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: ["sh", "-c", "chmod +x /app/start.sh && /app/start.sh"]
  
  postgres:
    image: postgres:latest
    container_name: paystell-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: paystell
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d paystell"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    container_name: paystell-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5051:80"
    depends_on:
      - postgres
  redis:
    image: redis:alpine
    container_name: paystell-redis
    restart: always
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  postgres_data:
