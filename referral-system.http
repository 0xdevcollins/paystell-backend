### Variables
@baseUrl = http://localhost:4000/api
@authToken = {{$processEnv AUTH_TOKEN}}
@adminToken = {{$processEnv ADMIN_TOKEN}}

### Health Check
GET {{baseUrl}}/health

### ============================================
### AUTHENTICATION SETUP (Run these first)
### ============================================

### Login to get auth token
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "user@example.com",
  "password": "password123"
}

### Extract token from login response
@token = {{login.response.body.data.token}}

### Admin login
# @name adminLogin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "adminpass123"
}

### Extract admin token
@adminToken = {{adminLogin.response.body.data.token}}

### ============================================
### REFERRAL PROGRAM MANAGEMENT (Admin Only)
### ============================================

### Create a new referral program
# @name createProgram
POST {{baseUrl}}/programs
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Summer Referral Campaign 2024",
  "description": "Refer friends and earn rewards this summer!",
  "referrerReward": 25.00,
  "refereeReward": 15.00,
  "rewardCurrency": "USD",
  "startDate": "2024-06-01T00:00:00.000Z",
  "endDate": "2024-08-31T23:59:59.000Z",
  "maxRewardsPerUser": 10,
  "totalBudget": 10000.00,
  "conditions": {
    "minTransactionAmount": 100,
    "requireKYC": true,
    "requireEmailVerification": true
  }
}

### Extract program ID
@programId = {{createProgram.response.body.data.id}}

### Get all referral programs
GET {{baseUrl}}/programs
Authorization: Bearer {{adminToken}}

### Get all programs with pagination
GET {{baseUrl}}/programs?page=1&limit=5
Authorization: Bearer {{adminToken}}

### Get specific program by ID
GET {{baseUrl}}/programs/{{programId}}
Authorization: Bearer {{adminToken}}

### Get active program (public endpoint)
GET {{baseUrl}}/programs/active

### Update referral program
PUT {{baseUrl}}/programs/{{programId}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Updated Summer Referral Campaign 2024",
  "referrerReward": 30.00,
  "refereeReward": 20.00,
  "maxRewardsPerUser": 15
}

### Activate referral program
PUT {{baseUrl}}/programs/{{programId}}/activate
Authorization: Bearer {{adminToken}}

### Deactivate referral program
PUT {{baseUrl}}/programs/{{programId}}/deactivate
Authorization: Bearer {{adminToken}}

### ============================================
### REFERRAL MANAGEMENT (User Endpoints)
### ============================================

### Create a referral (generate referral code)
# @name createReferral
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "expiresAt": "2024-12-31T23:59:59.000Z"
}

### Extract referral code
@referralCode = {{createReferral.response.body.data.referralCode}}

### Create referral with default expiration (30 days)
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

### Validate referral code (public endpoint)
GET {{baseUrl}}/referrals/validate/{{referralCode}}

### Validate invalid referral code
GET {{baseUrl}}/referrals/validate/INVALID123

### Process referral signup (when someone uses your referral code)
POST {{baseUrl}}/referrals/signup
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "referralCode": "{{referralCode}}"
}

### Get user's referrals
GET {{baseUrl}}/referrals
Authorization: Bearer {{token}}

### Get user's referrals with pagination
GET {{baseUrl}}/referrals?page=1&limit=5
Authorization: Bearer {{token}}

### Get user's referral statistics
GET {{baseUrl}}/referrals/stats
Authorization: Bearer {{token}}

### Get user's rewards
GET {{baseUrl}}/referrals/rewards
Authorization: Bearer {{token}}

### Get user's rewards with pagination
GET {{baseUrl}}/referrals/rewards?page=1&limit=10
Authorization: Bearer {{token}}

### ============================================
### REWARD MANAGEMENT
### ============================================

### Process reward payment (Admin/System endpoint)
PUT {{baseUrl}}/referrals/rewards/1/pay
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "transactionHash": "0x1234567890abcdef1234567890abcdef12345678"
}

### Process reward payment without transaction hash
PUT {{baseUrl}}/referrals/rewards/2/pay
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{}

### ============================================
### ERROR HANDLING TESTS
### ============================================

### Test unauthorized access to protected endpoints
GET {{baseUrl}}/referrals

### Test invalid referral code format
POST {{baseUrl}}/referrals/signup
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "referralCode": ""
}

### Test self-referral (should fail)
POST {{baseUrl}}/referrals/signup
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "referralCode": "{{referralCode}}"
}

### Test creating program without admin rights
POST {{baseUrl}}/programs
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Unauthorized Program",
  "referrerReward": 10,
  "refereeReward": 5,
  "startDate": "2024-06-01T00:00:00.000Z"
}

### Test invalid program data
POST {{baseUrl}}/programs
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "",
  "referrerReward": "invalid",
  "refereeReward": -5,
  "startDate": "invalid-date"
}

### Test non-existent program
GET {{baseUrl}}/programs/99999
Authorization: Bearer {{adminToken}}

### Test non-existent reward payment
PUT {{baseUrl}}/referrals/rewards/99999/pay
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{}

### ============================================
### EDGE CASES AND VALIDATION TESTS
### ============================================

### Test expired referral code validation
GET {{baseUrl}}/referrals/validate/EXPIRED123

### Test referral code that's already been used
POST {{baseUrl}}/referrals/signup
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "referralCode": "USED123CODE"
}

### Test creating referral with past expiration date
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "expiresAt": "2020-01-01T00:00:00.000Z"
}

### Test updating non-existent program
PUT {{baseUrl}}/programs/99999
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Non-existent Program Update"
}

### Test activating non-existent program
PUT {{baseUrl}}/programs/99999/activate
Authorization: Bearer {{adminToken}}

### ============================================
### BULK OPERATIONS AND PERFORMANCE TESTS
### ============================================

### Create multiple referrals for testing
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

###
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

###
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

### Test pagination with large page numbers
GET {{baseUrl}}/referrals?page=100&limit=50
Authorization: Bearer {{token}}

### Test with maximum limit
GET {{baseUrl}}/referrals?page=1&limit=100
Authorization: Bearer {{token}}

### ============================================
### INTEGRATION TESTS
### ============================================

### Complete referral flow test
# 1. Create program (admin)
# @name flowProgram
POST {{baseUrl}}/programs
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Integration Test Program",
  "referrerReward": 50,
  "refereeReward": 25,
  "startDate": "2024-01-01T00:00:00.000Z",
  "endDate": "2024-12-31T23:59:59.000Z"
}

### 2. Activate the program
PUT {{baseUrl}}/programs/{{flowProgram.response.body.data.id}}/activate
Authorization: Bearer {{adminToken}}

### 3. User creates referral
# @name flowReferral
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

### 4. Validate the referral code
GET {{baseUrl}}/referrals/validate/{{flowReferral.response.body.data.referralCode}}

### 5. Check stats before signup
GET {{baseUrl}}/referrals/stats
Authorization: Bearer {{token}}

### 6. Process referral signup (simulate new user)
POST {{baseUrl}}/referrals/signup
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "referralCode": "{{flowReferral.response.body.data.referralCode}}"
}

### 7. Check stats after signup
GET {{baseUrl}}/referrals/stats
Authorization: Bearer {{token}}

### 8. Check rewards
GET {{baseUrl}}/referrals/rewards
Authorization: Bearer {{token}}

### ============================================
### CLEANUP TESTS (Optional)
### ============================================

### Deactivate test programs
PUT {{baseUrl}}/programs/{{programId}}/deactivate
Authorization: Bearer {{adminToken}}

### ============================================
### LOAD TESTING SCENARIOS
### ============================================

### Rapid referral code generation (simulate high load)
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

###
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

###
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

###
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

###
POST {{baseUrl}}/referrals
Authorization: Bearer {{token}}
Content-Type: application/json

{}

### Concurrent validation requests
GET {{baseUrl}}/referrals/validate/{{referralCode}}

###
GET {{baseUrl}}/referrals/validate/{{referralCode}}

###
GET {{baseUrl}}/referrals/validate/{{referralCode}}

### ============================================
### MONITORING AND HEALTH CHECKS
### ============================================

### Check if referral system is healthy
GET {{baseUrl}}/referrals/stats
Authorization: Bearer {{token}}

### Verify active program exists
GET {{baseUrl}}/programs/active

### Check recent referrals
GET {{baseUrl}}/referrals?page=1&limit=5
Authorization: Bearer {{token}}

### Check recent rewards
GET {{baseUrl}}/referrals/rewards?page=1&limit=5
Authorization: Bearer {{token}}
